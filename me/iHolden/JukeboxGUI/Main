package me.iHolden.JukeboxGUI;

import java.util.List;

import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.Server;
import org.bukkit.block.Jukebox;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.command.ConsoleCommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.block.BlockBreakEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.java.JavaPlugin;

public class Main
  extends JavaPlugin
  implements Listener
{
  public static Main plugin;
  
  public void onEnable()
  {
    getServer().getPluginManager().registerEvents(this, this);
	Server server = getServer();
	ConsoleCommandSender consoleMessage = server.getConsoleSender();
	consoleMessage.sendMessage(ChatColor.DARK_PURPLE + "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-");
	consoleMessage.sendMessage("");
	consoleMessage.sendMessage(ChatColor.LIGHT_PURPLE + "JukeboxGUI ENABLED!");
	consoleMessage.sendMessage(ChatColor.LIGHT_PURPLE + "Version 1.0");
	consoleMessage.sendMessage(ChatColor.LIGHT_PURPLE + "By iHolden");
	consoleMessage.sendMessage("");
	consoleMessage.sendMessage(ChatColor.DARK_PURPLE + "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-");
  }
  
  private ItemStack setName(ItemStack is, String name, List<String> lore)
  {
    ItemMeta im = is.getItemMeta();
    if (name != null) {
      im.setDisplayName(name);
    }
    if (lore != null) {
      im.setLore(lore);
    }
    is.setItemMeta(im);
    return is;
  }
  
  @EventHandler
  public void onPlayerInteract(PlayerInteractEvent e)
  {
    final Player player = e.getPlayer();
    if ((player.hasPermission("jukeboxgui.use")) && 
      (e.getAction() == Action.RIGHT_CLICK_BLOCK) && 
      (e.getClickedBlock().getType() == Material.JUKEBOX))
    {
      final Jukebox juke = (Jukebox)e.getClickedBlock().getState();
      juke.setPlaying(null);
      
      IconMenu menu = new IconMenu("Select a record", 18, new IconMenu.OptionClickEventHandler()
      {
        public void onOptionClick(IconMenu.OptionClickEvent click)
        {
          if ((click.getPosition() == 2) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_10);
          }
          if ((click.getPosition() == 3) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_11);
          }
          if ((click.getPosition() == 4) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_12);
          }
          if ((click.getPosition() == 5) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_3);
          }
          if ((click.getPosition() == 6) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_4);
          }
          if ((click.getPosition() == 10) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.GREEN_RECORD);
          }
          if ((click.getPosition() == 11) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_5);
          }
          if ((click.getPosition() == 12) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_6);
          }
          if ((click.getPosition() == 13) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_7);
          }
          if ((click.getPosition() == 14) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_8);
          }
          if ((click.getPosition() == 15) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.RECORD_9);
          }
          if ((click.getPosition() == 16) && 
            (player.hasPermission("jukeboxgui.use"))) {
            juke.setPlaying(Material.GOLD_RECORD);
          }
          click.setWillClose(true);
        }
      }, this)
        .setOption(2, new ItemStack(Material.RECORD_10, 1), "Ward", new String[] { "Click To Play Ward" })
        .setOption(3, new ItemStack(Material.RECORD_11, 1), "11", new String[] { "Click To Play 11" })
        .setOption(4, new ItemStack(Material.RECORD_12, 1), "Wait", new String[] { "Click To Play Wait" })
        .setOption(5, new ItemStack(Material.RECORD_3, 1), "Blocks", new String[] { "Click To Play Blocks" })
        .setOption(6, new ItemStack(Material.RECORD_4, 1), "Chirp", new String[] { "Click To Play Chirp" })
        .setOption(10, new ItemStack(Material.GREEN_RECORD, 1), "Cat", new String[] { "Click To Play Cat" })
        .setOption(11, new ItemStack(Material.RECORD_5, 1), "Far", new String[] { "Click To Play Far" })
        .setOption(12, new ItemStack(Material.RECORD_6, 1), "Mall", new String[] { "Click To Play Mall" })
        .setOption(13, new ItemStack(Material.RECORD_7, 1), "Mellohi", new String[] { "Click To Play Mellohi" })
        .setOption(14, new ItemStack(Material.RECORD_8, 1), "Stal", new String[] { "Click To Play Stal" })
        .setOption(15, new ItemStack(Material.RECORD_9, 1), "Strad", new String[] { "Click To Play Strad" })
        .setOption(16, new ItemStack(Material.GOLD_RECORD, 1), "13", new String[] { "Click To Play 13" });
      menu.open(player);
    }
  }
  
  @EventHandler
  public void onBlockBreak(BlockBreakEvent e)
  {
    Player player = e.getPlayer();
    if ((player.hasPermission("jukeboxgui.use")) && 
      (e.getBlock().getType() == Material.JUKEBOX))
    {
      Jukebox juke = (Jukebox)e.getBlock().getState();
      juke.setPlaying(null);
    }
  }
  
  public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String[] args)
  {
    Player player = (Player)sender;
    commandLabel.equalsIgnoreCase("jukebox");
    
    return false;
  }
}
